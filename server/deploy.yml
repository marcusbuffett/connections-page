apiVersion: v1
kind: Service
metadata:
  name: connections-server
spec:
  ports:
    - port: 80
  selector:
    app: connections-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connections-server
spec:
  selector:
    matchLabels:
      app: connections-server
  replicas: 1
  template:
    metadata:
      labels:
        app: connections-server
    spec:
      containers:
        - image: marcusbuffett/connections-server:latest
          name: connections-server
          ports:
            - containerPort: 80
              name: main
          readinessProbe:
            httpGet:
              path: /api/health
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 2

      imagePullSecrets:
        - name: docker-hub-secret-key
      volumes:
        - name: connections-persistent-storage
          persistentVolumeClaim:
            claimName: connections-pv-claim

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: connections-server
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    konghq.com/override: "https-only"
spec:
  tls:
    - secretName: connections-server-tls
      hosts:
        - theconnection.page
  rules:
    - host: theconnection.page
      http: &http_rules
        paths:
          - path: /api
            pathType: Prefix
            backend:
              serviceName: connections-server
              servicePort: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: connections-pv-volume
  labels:
    type: local
spec:
  storageClassName: do-block-storage
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: connections-pv-claim
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
